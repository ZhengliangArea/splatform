<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/context  
   						 http://www.springframework.org/schema/context/spring-context-3.0.xsd  ">

	<!-- 主动扫描@Service注解,由spring父容器扫描,解决注解事务回滚失败的问题,
		父容器进行初始化的Service是保证事务的增强处理能力的-->
	<context:component-scan base-package="com.splatform"/>

	<!-- 加载数据库配置文件 -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- manager后台管理数据源配置 -->
	<bean id="managerDatasource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver" value="${driver_oracle_class}" />
		<property name="driverUrl" value="${driver_oracle_url}" />
		<!-- <property name="driverUrl" value="jdbc:oracle:thin:@192.168.0.126:1521:jiagulun" /> -->
		<property name="user" value="${database_oracle_user}" />
		<property name="alias" value="pool_dbname" />
		<property name="password" value="${database_oracle_password}" />
		<property name="maximumActiveTime" value="300000" />
		<property name="prototypeCount" value="4" />
		<property name="maximumConnectionCount" value="25" />
		<property name="minimumConnectionCount" value="2" />
		<property name="simultaneousBuildThrottle" value="30" />
		<property name="trace" value="true" />
		<property name="houseKeepingTestSql" value="select sysdate from dual" />
	</bean>

	

	<!-- bean从容器里删除之前要调用的shutdown方法，显式地关闭proxool连接池 -->
	<bean id="dataSourceFacade" class="org.logicalcobwebs.proxool.ProxoolFacade"
		destroy-method="shutdown" />

	<!-- JDBC Template -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="managerDatasource" />
	</bean>

	<!-- sessionFactory配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="managerDatasource" />
		<!-- 包扫描的方式加载注解类(推荐) -->  
        <property name="packagesToScan">  
            <list>  
                <value>com.splatform.manage.*</value>  
            </list>
        </property>
		
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
				hibernate.show_sql=true
				hibernate.format_sql=true
				hibernate.cache.use_query_cache=true<!-- 启用二级缓存 -->  
				hibernate.cache.use_second_level_cache=true<!-- 启用查询缓存 -->  
				hibernate.cache.provider_class=net.sf.ehcache.hibernate.EhCacheProvider<!-- 指定cache实现类 -->
				hibernate.cache.provider_configuration_file_resource_path=ehcache.xml<!-- 指定ehcache配置文件  -->
				hibernate.temp.use_jdbc_metadata_defaults=false
				hibernate.jdbc.batch_size=50
			</value>
		</property>
	</bean>

	<!-- 事务管理器配置 -->
	<bean id="myTxManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 配置事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="myTxManager">
		<tx:attributes>
			<tx:method name="insert*" rollback-for="Exception" />
			<tx:method name="update*" rollback-for="Exception" />
			<tx:method name="delete*" rollback-for="Exception" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<!-- 启动@AspectJ支持-->
	<aop:aspectj-autoproxy />
	<!-- 配置切入点和方面 -->
	<aop:config>
		<aop:pointcut id="defaultServiceOperation"
			expression="execution(* com.splatform.manager.*.bo.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="defaultServiceOperation" />
	</aop:config>


	<!--
		定义切面类 短地址ehcache相关 > <bean
		class="com.splatform.internet.ams.common.EhcacheAOPImpl"/
	-->
	<!-- 用注解来实现事务管理 -->  
    <tx:annotation-driven transaction-manager="myTxManager" />
    
</beans>